[{"title":"力扣-283-移动零","date":"2023-02-02T14:50:04.000Z","url":"/2023/02/02/%E5%8A%9B%E6%89%A3-283-%E7%A7%BB%E5%8A%A8%E9%9B%B6/","tags":[["双指针","/tags/%E5%8F%8C%E6%8C%87%E9%92%88/"]],"categories":[["算法","/categories/%E7%AE%97%E6%B3%95/"]],"content":"题目 思路使用双指针，左指针维护一个下标，右指针寻找非零元素，一旦找到则赋值给左指针所指向的位置，最后将其余位置填补成0即可"},{"title":"力扣-121-买卖股票的最佳时机","date":"2023-02-02T14:45:34.000Z","url":"/2023/02/02/%E5%8A%9B%E6%89%A3-121-%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA/","tags":[["模拟","/tags/%E6%A8%A1%E6%8B%9F/"]],"categories":[["算法","/categories/%E7%AE%97%E6%B3%95/"]],"content":"题目 思路只需要遍历价格数组一遍，记录历史最低点，然后在每一天考虑这么一个问题：如果我是在历史最低点买进的，那么我今天卖出能赚多少钱？当考虑完所有天数之时，我们就得到了最好的答案。"},{"title":"力扣-70-爬楼梯","date":"2023-02-02T14:35:53.000Z","url":"/2023/02/02/%E5%8A%9B%E6%89%A3-70-%E7%88%AC%E6%A5%BC%E6%A2%AF/","tags":[["动态规划","/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"]],"categories":[["算法","/categories/%E7%AE%97%E6%B3%95/"]],"content":"题目 思路假设 f(x)代表爬第x楼的方法数，则明显可知，f(0) &#x3D; 1， f(1) &#x3D; 1，f(2) &#x3D; 2，而对于f(3)的话可以选择从一楼爬两个台阶或从二楼爬一个台阶，则f(3) &#x3D; f(2) + f(1)，由此可以推广到f(x) &#x3D; f(x- 1) + f(x - 2) 则可以设置三个变量a1，a2，a3，每次爬楼则将a2赋值给a1，将a3赋值给a2，将a1 + a2赋值给a3 "},{"title":"力扣-20-有效的括号","date":"2023-02-02T14:29:09.000Z","url":"/2023/02/02/%E5%8A%9B%E6%89%A3-20-%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7/","tags":[["模拟","/tags/%E6%A8%A1%E6%8B%9F/"],["stl","/tags/stl/"]],"categories":[["算法","/categories/%E7%AE%97%E6%B3%95/"]],"content":"题目 思路这题较为简单，使用map模拟即可，遇到 左括号压入栈内，遇到右括号判栈是否为空，然后判断是否与栈顶匹配 反思Java中Map的栈顶是peek()，另外记得先判断栈是否为空"}]